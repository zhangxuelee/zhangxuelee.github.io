<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CSS基础知识</title>
      <link href="/blog/2022/07/16/CSS%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/blog/2022/07/16/CSS%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS基础"><a href="#CSS基础" class="headerlink" title="CSS基础"></a>CSS基础</h1><h2 id="1-CSS简介"><a href="#1-CSS简介" class="headerlink" title="1.CSS简介"></a>1.CSS简介</h2><h3 id="1-1-概念"><a href="#1-1-概念" class="headerlink" title="1.1 概念"></a>1.1 概念</h3><blockquote><p>CSS（层叠样式表）是一种标记语言，用于设置HTML页面中的文本内容（字体、大小、对齐方式等）、图片的外形（宽高、边框样式、边距等）及版面的布局和外观显示样式。</p></blockquote><h3 id="1-2-CSS语法规范"><a href="#1-2-CSS语法规范" class="headerlink" title="1.2 CSS语法规范"></a>1.2 CSS语法规范</h3><blockquote><p>选择器 {样式}</p></blockquote><pre><code>&lt;style&gt;    p {        color: red;        font-size: 12px;    }&lt;/style&gt;</code></pre><h2 id="2-CSS基础选择器"><a href="#2-CSS基础选择器" class="headerlink" title="2.CSS基础选择器"></a>2.CSS基础选择器</h2><blockquote><p>基础选择器由单个选择器组成，包括标签选择器、类选择器、id选择器和通配符选择器。  </p></blockquote><p><strong>1. 标签选择器：可以选出所有相同的标签</strong></p><blockquote><p>为同类型的标签统一设置样式，谁需要谁调用。</p></blockquote><pre><code>   &lt;style&gt;       p {           color: green;       }       div {            color: pink;       }   &lt;/style&gt;</code></pre><p><strong>2. <font color="#0099ff">类选择器：差异化选择不同的标签</font></strong></p><font color="#0099ff"></font><blockquote><font color="#0099ff"></font><p><font color="#0099ff">样式点定义，结构类调用；一个或多个，开发最常用。</font></p></blockquote><pre><code>   &lt;head&gt;       &lt;style&gt;       .red {           color: red;       }       .star-sing {           color: green;       }       .memeda {             color: pink;       }       &lt;/style&gt;   &lt;/head&gt;   &lt;body&gt;       &lt;ul&gt;           &lt;li class="red"&gt;冰雨&lt;/li&gt;           &lt;li class="red"&gt;来生缘&lt;/li&gt;           &lt;li&gt;李香兰&lt;/li&gt;           &lt;li class="memeda"&gt;生僻字&lt;/li&gt;           &lt;li class="star-sing"&gt;江南style&lt;/li&gt;       &lt;/ul&gt;       &lt;div class="red"&gt;我也想变红色&lt;/div&gt;   &lt;/body&gt;</code></pre><blockquote><p><font color="#0099ff">多类名：同一个div可调用多个class</font></p></blockquote><pre><code>   &lt;head&gt;       &lt;style&gt;           .red {               color:  red;           }           .font35 {               font-size: 35px;           }       &lt;/style&gt;   &lt;/head&gt;   &lt;body&gt;       &lt;div class="red font35"&gt;刘德华&lt;/div&gt;   &lt;/body&gt;</code></pre><p><strong>3. id选择器</strong></p><blockquote><p>HTML元素以id属性来设置id选择器，CSS中id选择器以#来定义。<font color="#0099ff">id只可以被调用一次，class可以被调用多次</font></p></blockquote><pre><code>    &lt;head&gt;        &lt;style&gt;            #nav(id名) {；                color: red;                ···            }        &lt;/style&gt;    &lt;/head&gt;    &lt;body&gt;        &lt;div id="nav"&gt;&lt;/div&gt;    &lt;/body&gt;</code></pre><p><strong>4. 通配符选择器</strong></p><blockquote><p>通配符选择器使用*定义，表示选取页面中所有（例如HTML、div、li等）元素（标签）</p></blockquote><blockquote><p>通配符选择器不需要调用，自动就给所有的元素使用样式</p></blockquote><pre><code>    &lt;style&gt;        * {            color: red;        }    &lt;/style&gt;</code></pre><p><strong>5. id选择器和类选择器的区别</strong></p><blockquote><p>类选择器（class）类比人的名字，一个人可以有多个名字，同时一个名字也可以被多个人使用</p></blockquote><blockquote><p>id选择器类比人的身份证号码，全中国是唯一的，不得重复</p></blockquote><h2 id="3-CSS字体属性"><a href="#3-CSS字体属性" class="headerlink" title="3.CSS字体属性"></a>3.CSS字体属性</h2><blockquote><p>CSS Fonts（字体）属性用于定义字体系列、大小、粗细和文字样式（如斜体）  </p></blockquote><p><strong>1. 字体系列</strong></p><blockquote><p>字体之间使用逗号隔开，若是多个单词则需要加引号，可以直接给body定义</p></blockquote><pre><code>```&lt;html&gt;    &lt;style&gt;    body {        font-family: 'Times New Roman', Times, serif;    }    h2 {        font-family: '微软雅黑';    }    p {        font-family: 'Times New Roman', Times, serif;    }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;h2&gt;pink的秘密&lt;/h2&gt;    &lt;p&gt;那一抹众人中最漂亮的颜色,&lt;/p&gt;    &lt;p&gt;优雅,淡然,又那么心中清澈.&lt;/p&gt;    &lt;p&gt;前端总是伴随着困难和犯错,&lt;/p&gt;    &lt;p&gt;静心,坦然,攻克一个又一个.&lt;/p&gt;    &lt;p&gt;拼死也要克服它,&lt;/p&gt;    &lt;p&gt;这是pink的秘密也是老师最终的嘱托.&lt;/p&gt;&lt;/body&gt;```</code></pre><p><strong>2. 字体大小</strong></p><blockquote><p>CSS使用font-size属性定义字体大小，可以直接给body指定整个页面文字的大小<br>    <code>p {        font-size: 20px;    }</code><br>注：标题标签需要单独指定文字大小</p></blockquote><p><strong>3. 字体粗细</strong></p><blockquote><p>CSS使用font-weight属性定义字体粗细</p></blockquote><pre><code>```&lt;head&gt;    &lt;style&gt;    .bold {        font-weight: 700;        }    h2 {        font-weight: 400;       }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;h2&gt;pink的秘密&lt;/h2&gt;    &lt;p class="bold"&gt;拼死也要克服它&lt;/p&gt;&lt;/body&gt;```</code></pre><p><strong>4. 字体样式（风格）</strong></p><blockquote><p>CSS使用font-style属性定义字体样式</p></blockquote><pre><code>```&lt;html&gt;    &lt;style&gt;    p {        font-style: italic;    }    em {        font-style: normal;    }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;p&gt;同学,上课时候的你&lt;/p&gt;    &lt;em&gt;下课时候的你&lt;/em&gt;&lt;/body&gt;```</code></pre><p><strong>5. <font color="#0099ff">复合属性</font></strong></p><blockquote><p>字体属性可以综合来写，格式顺序不可改变</p></blockquote><blockquote><p>格式：font: font-style  font-weight  font-size/line-height  font-family;</p></blockquote><blockquote><p>font-size和font-family属性必须有，其余属性可以省略</p></blockquote><pre><code>```&lt;head&gt;    &lt;style&gt;    /* 想要div文字变倾斜 加粗 字号设置为16像素 并且 是微软雅黑 */    div {        /* font-style: italic;        font-weight: 700;        font-size: 16px;        font-family: 'Microsoft yahei'; */        /* 复合属性: 简写的方式  节约代码 */        /* font: font-style  font-weight  font-size/line-height  font-family; */        /* font: italic 700 16px 'Microsoft yahei'; */        font: 20px '黑体';    }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div&gt;三生三世十里桃花,一心一意百行代码&lt;/div&gt;&lt;/body&gt;```</code></pre><p><strong>6. 字体属性总结</strong></p><table><thead><tr><th>属性</th><th>表示</th><th>注意点</th></tr></thead><tbody><tr><td>font-size</td><td>字号</td><td>单位是px</td></tr><tr><td>font-family</td><td>字体</td><td>实际工作中按照团队约定书写字体</td></tr><tr><td>font-weight</td><td>字体粗细</td><td>加粗是700或bold，不加粗是400或normal；数字后不跟单位</td></tr><tr><td>font-style</td><td>字体样式</td><td>倾斜是italic，不倾斜是normal；常用normal</td></tr><tr><td>font</td><td>字体连写</td><td>1.字体连写是有顺序的，不能随意换位置 2.其中字号和字体必须同时出现</td></tr></tbody></table><h2 id="4-CSS文本属性"><a href="#4-CSS文本属性" class="headerlink" title="4.CSS文本属性"></a>4.CSS文本属性</h2><blockquote><p>CSS Text（文本）属性可定义文本的<font color="#0099ff">外观</font>，例如文本的颜色、对齐文本、装饰文本、文本缩进、行间距等  </p></blockquote><p><strong>4.1 文本颜色</strong></p><blockquote><p>color属性用于定义文本的颜色<br>    <code>div {        color: red;    }</code></p></blockquote><p><strong>4.2 对齐文本</strong></p><blockquote><p>text-align属性用于设置元素内文本内容的水平对齐方式</p></blockquote><pre><code>h1 {    text-align: center/left/right;}</code></pre><p><strong>4.3 装饰文本</strong></p><blockquote><p>text-decoration属性规定添加到文本的修饰，可以给文本添加下划线、删除线、上划线等</p></blockquote><pre><code>div {text-decoration:underline/none;}</code></pre><p><strong>4.4 文本缩进</strong></p><blockquote><p>text-indent属性常用于段落的首行缩进</p></blockquote><pre><code>p {    text-indent: 2em;}</code></pre><p><strong>4.5 行间距</strong></p><blockquote><p>text-height属性用于设置行间距（行高），行高=上间距+文本高度+下间距</p></blockquote><pre><code>p {    text-height: 25px;}</code></pre><p><strong>4.6 文本属性总结</strong><br>|属性|表示|注意点|<br>|–|–|–|<br>|color|文本颜色|通常使用十六进制的简写形式|<br>|text-align|文本对齐|left/center/right|<br>|text-decoration|文本装饰|添加下划线：underline；取消下划线：none|<br>|text-indent|文本缩进|通常text-indent: 2em|<br>|text-height|行高|行高 = 上间距 + 文本高度 + 下间距|</p><h2 id="5-CSS的引入方式"><a href="#5-CSS的引入方式" class="headerlink" title="5.CSS的引入方式"></a>5.CSS的引入方式</h2><ol><li><p>行内样式表（行内式）</p><blockquote><p>行内样式表（内联样式表）是<font color="#0099ff">在元素标签内部的<code>&lt;style&gt;</code>属性中设定CSS样式</font>，适合于修改简单样式</p></blockquote><blockquote><p><code>&lt;style&gt;</code>其实就是标签的属性，将<code>style</code>直接放在<code>&lt;div&gt;</code>标签中</p></blockquote><blockquote><p>控制当前标签的样式设置</p></blockquote><pre><code>&lt;div style="color: red; font-size: 12px;"&gt;青春不常在，抓紧去学习&lt;/div&gt;</code></pre></li><li><p>内部样式表（嵌入式）</p><blockquote><p>内部样式表（内嵌样式表）是<font color="#0099ff">写到HTML页面内部，是将所有的CSS代码抽取出来，单独放到一个<code>&lt;style&gt;</code>标签中</font></p></blockquote><blockquote><p>一般将<code>&lt;style&gt;</code>标签放在<code>&lt;head&gt;</code>标签中</p></blockquote><blockquote><p>控制当前页面的元素样式设置</p></blockquote><pre><code>&lt;style&gt;    div {        color: red;        font-size: 12px;    }&lt;/style&gt;</code></pre></li><li><p><font color="#0099ff">外部样式表（链接式）</font></p><blockquote><p>外部样式表是<font color="#0099ff">样式单独写到CSS文件中，之后把CSS文件引入到HTML页面中使用</font></p></blockquote><blockquote><p>新建后缀为.css的文件，把所有CSS代码放入其中；在HTML页面中，使用<code>&lt;link&gt;</code>标签引入这个文件；<code>&lt;link&gt;</code>标签放在<code>&lt;head&gt;</code>标签中</p></blockquote><blockquote><p>控制多个页面的元素样式设置</p></blockquote><pre><code>&lt;link rel="stylesheet" href="css文件路径/style.css"&gt;</code></pre></li></ol><h2 id="6-CSS的复合选择器"><a href="#6-CSS的复合选择器" class="headerlink" title="6.CSS的复合选择器"></a>6.CSS的复合选择器</h2><blockquote><p>常用的复合选择器包括：后代选择器、子选择器、并集选择器、伪类选择器</p></blockquote><ol><li><p><font color="#0099ff">后代选择器</font></p><blockquote><p>后代选择器（包含选择器）可以选择父元素里面子元素</p></blockquote><blockquote><p><code>元素1 元素2 {样式声明}</code></p></blockquote><p><font color="#0099">注：上述语法表示选择元素1里面的所有元素2（后代元素）</font></p></li><li><p><font color="#0099ff">子选择器</font></p><blockquote><p>子元素选择器只能选择作为某元素的最近以及子元素，简单理解就是选亲儿子元素</p></blockquote><blockquote><p><code>元素1 &gt; 元素2 {样式声明}</code></p></blockquote><p><font color="#0099">注：上述语法表示选择元素1里面的所有直接后代元素2（子元素）</font></p></li><li><p><font color="#0099ff">并集选择器</font></p><blockquote><p>并集选择器可以选择多组标签，同时为他们定义相同的样式，常用于集体声明</p></blockquote><blockquote><p><code>元素1 , 元素2 {样式声明}</code></p></blockquote><p><font color="#0099">注：上述语法表示元素1和元素2</font></p></li><li><p>伪类选择器之<font color="#0099ff">链接伪类选择器</font></p><blockquote><p>伪类选择器用于向某些选择器添加特殊的效果，比如给链接添加特殊效果</p></blockquote><blockquote><p><code>a:link/visited/hover/active</code><br>（顺序不可改变）</p></blockquote><blockquote><p>a链接需要单独指定样式</p></blockquote><pre><code> a {     color: gray; } a:hover {     color: red; }</code></pre><table><thead><tr><th>选项</th><th>解释</th></tr></thead><tbody><tr><td>link</td><td>选择所有未被访问的链接</td></tr><tr><td>visited</td><td>选择所有已被访问的链接</td></tr><tr><td>hover</td><td>选择鼠标指针位于其上的链接</td></tr><tr><td>active</td><td>选择活动链接（鼠标按下未弹起的链接）</td></tr></tbody></table><p><font color="#0099">注：上述语法表示元素1和元素2</font></p></li><li><p>伪类选择器之<font color="#0099ff">：focus伪类选择器</font></p><blockquote><p>：focus伪类选择器用于选取获得焦点的表单元素</p></blockquote><pre><code>input:focus { background-color: yellow;}</code></pre></li><li><p>复合选择器总结</p><table><thead><tr><th>选择器</th><th>作用</th><th>特征</th><th>使用情况</th><th>隔开符号及用法</th></tr></thead><tbody><tr><td>后代选择器</td><td>用来选择后代元素</td><td>可以是子孙后代</td><td>较多</td><td>符号是<strong>空格</strong> .nav a</td></tr><tr><td>子代选择器</td><td>选择最近一级元素</td><td>只选亲儿子</td><td>较少</td><td>符号是<strong>大于</strong> .nav&gt;p</td></tr><tr><td>并集选择器</td><td>选择某些相同样式的元素</td><td>可以用于集体声明</td><td>较多</td><td>符号是<strong>逗号</strong> .nav，.header</td></tr><tr><td>链接伪类选择器</td><td>选择不同状态的链接</td><td>跟链接相关</td><td>较多</td><td>符号是<strong>大括号</strong> a{}和a:hover{}</td></tr><tr><td>：focus伪类选择器</td><td>选择获得光标的表单</td><td>跟表单相关</td><td>较少</td><td>符号是<strong>冒号</strong> input:focus</td></tr><tr><td>## 8.CSS的元素显示模式</td><td></td><td></td><td></td><td></td></tr></tbody></table></li></ol><blockquote><p>元素显示模式就是元素（标签）以什么方式进行显示</p></blockquote><ol><li><p>元素显示模式分类</p><blockquote><p>HTML分为块元素、行内元素和行内块元素</p></blockquote><table><thead><tr><th>元素模式</th><th>元素排列</th><th>设置样式</th><th>默认宽度</th><th>包含</th><th>注意</th></tr></thead><tbody><tr><td>块级元素</td><td>一行只能放一个块级元素</td><td>可以设置宽度高度</td><td>容器的100%</td><td>容器级可以包含任何标签</td><td>文字类的元素内不能放块级元素</td></tr><tr><td>行内元素</td><td>一行可以放多个行内元素</td><td>不可以直接设置宽度高度</td><td>它本身内容的宽度</td><td>容纳文本或者其他行内元素，不可放块元素</td><td>链接内可以放块元素</td></tr><tr><td>行内块元素</td><td>一行放多个行内块元素</td><td>可以设置宽度高度</td><td>它本身内容的宽度</td><td></td><td></td></tr></tbody></table></li><li><p>元素显示模式转换</p><blockquote><p>一个模式的元素需要另外一种模式的特性</p></blockquote><blockquote><p>转换为块元素<code>display:block;</code><br> 转换为行内元素<code>display:inline;</code><br> 转换为行内块元素<code>display:inline-block;</code><br> 注：单行文字垂直居中（CSS没有提供代码）<code>line-height</code>：让文字的行高等于盒子的高度</p></blockquote></li></ol><h2 id="9-CSS的背景"><a href="#9-CSS的背景" class="headerlink" title="9.CSS的背景"></a>9.CSS的背景</h2><blockquote><p>背景属性可以设置背景颜色、背景图片、背景平铺、背景图像固定、背景图片位置等</p></blockquote><ol><li>基础写法<table><thead><tr><th>作用</th><th>属性</th><th>值</th></tr></thead><tbody><tr><td>背景颜色</td><td>background-color</td><td>十六进制数/透明（transparent）</td></tr><tr><td>背景图片</td><td>background-image</td><td>url(图片路径)</td></tr><tr><td>背景平铺</td><td>background-repeat</td><td>no-repeat/repeat/repeat-x/repeat-y</td></tr><tr><td>背景图像固定</td><td>background-attachment</td><td>fixed/scroll</td></tr><tr><td>背景图片位置</td><td>background-position</td><td>center 20px</td></tr></tbody></table></li><li>复合写法<br> <code>background: transparent url(image.jpg) repeat-y fixed top;</code></li><li>背景颜色半透明<br> <code>background: rgba(0, 0, 0, .3);</code></li></ol><h2 id="10-CSS的三大特性"><a href="#10-CSS的三大特性" class="headerlink" title="10.CSS的三大特性"></a>10.CSS的三大特性</h2><blockquote><p>CSS的三个特性：层叠性、继承性、优先级</p></blockquote><ol><li><p>层叠性</p><blockquote><p>代码是逐条执行，若有冲突则会覆盖之前样式</p></blockquote></li><li><p>继承性  </p><blockquote><p>行高1.5这样写法最大的优势就是里面子元素可以根据自己文字大小自动调整行高  </p></blockquote><p>继承时行高是当前元素的文字大小的1.5倍   </p><p><code>font:12px/1.5 Microsoft YaHei</code></p></li><li><p>优先级</p><blockquote><p>复合选择器的权重会叠加，但权重叠加不进位</p></blockquote><table><thead><tr><th>选择器</th><th>选择器权重</th></tr></thead><tbody><tr><td>继承 或者 *</td><td>0，0，0，0</td></tr><tr><td>元素选择器</td><td>0，0，0，1</td></tr><tr><td>类选择器，伪类选择器</td><td>0，0，1，0</td></tr><tr><td>ID选择器</td><td>0，1，0，0</td></tr><tr><td>行内样式 style=””</td><td>1，0，0，0</td></tr><tr><td>!important 重要的</td><td>∞ 无穷大</td></tr></tbody></table></li></ol><h2 id="11-CSS-盒子模型"><a href="#11-CSS-盒子模型" class="headerlink" title="11.CSS 盒子模型"></a>11.CSS 盒子模型</h2><blockquote><p>页面布局三大核心：盒子模型、浮动、定位<br>   盒子模型组成：border边框、content内容、padding内边距、margin外边距</p></blockquote><ol><li><p>边框（border） </p><blockquote><p>CSS边框属性允许你指定一个元素边框的样式和颜色  </p></blockquote><p>语法：<br><code>border: border-width || border-style || border-color</code><br>简写：<br><code>border: 1px solid/dashed/dotted red;  没有顺序</code><br>边框分开写法：<code>border-top: 1px dashed pink;</code></p><table><thead><tr><th>样式</th><th>属性</th><th>值</th></tr></thead><tbody><tr><td>边框宽度</td><td>border-width</td><td>1px</td></tr><tr><td>边框样式</td><td>border-style</td><td>solid/dashed/dotted</td></tr><tr><td>边框颜色</td><td>border-color</td><td>pink</td></tr><tr><td>边框合并</td><td>border-collapse</td><td>collapse</td></tr></tbody></table></li><li><p>内边距（padding） </p><blockquote><p>CSS内边距属性可以有一到四个值（顺时针） </p></blockquote><blockquote><p>padding会撑开盒子大小，所以去掉盒子本身的的width/height属性 </p></blockquote><p>语法：<br><code>padding-top || padding-bottom || padding-left || padding-right</code><br>简写：<br><code>padding: 1px 5px 10px 20px;</code>  </p><table><thead><tr><th>值的个数</th><th>表达意思</th></tr></thead><tbody><tr><td>padding: 5px;</td><td>代表上下左右都有5px内边距</td></tr><tr><td>padding: 5px 10px;</td><td>代表上下内边距5px，左右内边距是10px</td></tr><tr><td>padding: 5px 10px 20px;</td><td>代表上内边距5px，左右内边距是10px，下内边距20px</td></tr><tr><td>padding: 5px 10px 20px 30px;</td><td>代表上内边距5px，右内边距是10px，下内边距20px，左内边距是30px</td></tr></tbody></table></li><li><p>外边距（margin）<br>3.1 基础   </p><blockquote><p>margin属性用于设置外边距，即控制盒子和盒子之间的距离</p></blockquote><p>语法：<br><code>margin-top || margin-bottom || margin-left || margin-right</code><br>简写：<br><code>margin: 1px 5px 10px 20px;</code>  </p><table><thead><tr><th>值的个数</th><th>表达意思</th></tr></thead><tbody><tr><td>margin: 5px;</td><td>代表上下左右都有5px外边距</td></tr><tr><td>margin: 5px 10px;</td><td>代表上下外边距5px，左右外边距是10px</td></tr><tr><td>margin: 5px 10px 20px;</td><td>代表上外边距5px，左右外边距是10px，下外边距20px</td></tr><tr><td>margin: 5px 10px 20px 30px;</td><td>代表上外边距5px，右外边距是10px，下外边距20px，左外边距是30px</td></tr><tr><td>3.2 块级盒子水平居中</td><td></td></tr></tbody></table><blockquote><p>外边距可以让块级盒子<font color="#0099ff">水平居中</font>，但必须满足两个条件  </p></blockquote><ul><li>盒子必须指定了宽度（width）</li><li>盒子左右的外边距都设置为auto</li></ul><p>语法：<code>.header {width:960px; margin:0 auto}</code></p><blockquote><p>以上方法是让块级元素水平居中<br>行内元素或行内块元素水平居中：给其父元素添加以下代码  </p></blockquote><p>语法：<code>text-aling: center</code></p><p>3.3 外边距合并</p><blockquote><p>使用margin定义块元素的垂直外边距（上下外边距）时，可能会出现外边距的合并</p></blockquote><ol><li><p>相邻块元素垂直外边距的合并（取两个值中的较大者）  </p><p>解决方案：尽量只给一个盒子添加margin值</p></li><li><p>嵌套块元素垂直外边距的塌陷（取两个值中的较大者） ：  </p><p> 解决方案：</p><ul><li>1.可以给父元素定义上边框（恩断义绝border框）</li><li>2.可以给父元素定义上内边框（恩断义绝padding框）</li><li>3.可以给父元素添加overflow: hidden</li></ul></li></ol></li><li><p>清除内外边距</p><blockquote><p>网页元素很多都带有默认的内外边距，不同的浏览器默认的内外边距不同；因此在布局前需要清除网页元素的内外边距 </p></blockquote><pre><code>* { padding: 0;  /*清除内边距*/ margin: 0;  /*清除外边距*/}</code></pre><p><font color="#0099">注：行内元素为了照顾兼容性，尽量只设置左右内外边距，不要设置上下内外边距，但是转换成块级和行内块元素就可以了</font></p></li><li></li><li><p>圆角边框</p></li><li><p>盒子阴影</p></li><li><p>文字阴影</p><h2 id="12-Emmet语法"><a href="#12-Emmet语法" class="headerlink" title="12.Emmet语法"></a>12.Emmet语法</h2><blockquote><p>设置中输入Emmet，勾选Trigger Expansion on tab</p></blockquote></li><li><p>快速生成HTML样式语法</p><table><thead><tr><th>类型</th><th>快捷语法</th><th>例子</th><th>结果</th></tr></thead><tbody><tr><td>多个相同</td><td>*</td><td>div*3</td><td>生成3个div</td></tr><tr><td>父子级</td><td>&gt;</td><td>ul&gt;li</td><td><code>&lt;ul&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;</code></td></tr><tr><td>兄弟级</td><td>+</td><td>div+p</td><td><code>&lt;div&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;</code></td></tr><tr><td>生成带有类名或id名</td><td>.或#</td><td>.demo</td><td><code>&lt;div class="demo"&gt;&lt;/div&gt;</code></td></tr><tr><td>生成带有类名或id名</td><td>.或#</td><td>p.demo</td><td><code>&lt;p class="demo"&gt;&lt;/p&gt;</code></td></tr><tr><td>复合</td><td>不要添加空格</td><td>ul&gt;li#two</td><td><code>&lt;ul&gt;&lt;li id="two"&gt;&lt;/li&gt;&lt;/ul&gt;</code></td></tr><tr><td>生成的div类名有顺序</td><td>$</td><td>.demo$*3</td><td><code>&lt;div class="demo1"&gt;&lt;/div&gt;&lt;div class="demo2"&gt;&lt;/div&gt;&lt;div class="demo3"&gt;&lt;/div&gt;</code></td></tr><tr><td>标签内显示文字</td><td>{}</td><td>div{hahaha}</td><td><code>&lt;div&gt;hahaha&lt;/div&gt;</code></td></tr><tr><td>多个标签内显示文字</td><td>{}*</td><td>div{hahaha}*3</td><td><code>&lt;div&gt;hahaha&lt;/div&gt;&lt;div&gt;hahaha&lt;/div&gt;&lt;div&gt;hahaha&lt;/div&gt;</code></td></tr><tr><td>标签内显示有顺序文字</td><td>{$}</td><td>div{$}*3</td><td><code>&lt;div&gt;1&lt;/div&gt;&lt;div&gt;2&lt;/div&gt;&lt;div&gt;3&lt;/div&gt;</code></td></tr></tbody></table></li><li><p>快速生成CSS样式语法</p><table><thead><tr><th>快捷语法</th><th>结果</th></tr></thead><tbody><tr><td>tac</td><td>text-align: center;</td></tr><tr><td>w100</td><td>width: 100px;</td></tr></tbody></table></li><li><p>格式化代码</p><blockquote><p>shift+alt+F</p></blockquote><blockquote><p>设置中搜索format on save</p></blockquote><h2 id="13-Chrome调试工具"><a href="#13-Chrome调试工具" class="headerlink" title="13.Chrome调试工具"></a>13.Chrome调试工具</h2><blockquote><p>F12打开调试工具  </p></blockquote></li></ol><ul><li>左边是HTML元素结构，右边是CSS样式  </li><li>点击元素发现左侧有class但右侧没有样式引入，极有可能是类名或样式引入错误  </li><li>如果有样式，但样式前有黄色感叹号提示，则是样式属性书写错误<h2 id="14-PS-基本操作"><a href="#14-PS-基本操作" class="headerlink" title="14.PS 基本操作"></a>14.PS 基本操作</h2><blockquote></blockquote></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML基础知识</title>
      <link href="/blog/2022/07/16/HTML%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/blog/2022/07/16/HTML%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML基础"><a href="#HTML基础" class="headerlink" title="HTML基础"></a>HTML基础</h1><h2 id="1-HTML语法规范"><a href="#1-HTML语法规范" class="headerlink" title="1.HTML语法规范"></a>1.HTML语法规范</h2><h2 id="2-HTML基本结构标签"><a href="#2-HTML基本结构标签" class="headerlink" title="2.HTML基本结构标签"></a>2.HTML基本结构标签</h2><pre><code>    &lt;html&gt;       &lt;head&gt;&lt;/head&gt;      &lt;body&gt;&lt;/body&gt;    &lt;/html&gt;</code></pre><h2 id="3-开发工具"><a href="#3-开发工具" class="headerlink" title="3.开发工具"></a>3.开发工具</h2><h2 id="4-HTML常用标签"><a href="#4-HTML常用标签" class="headerlink" title="4.HTML常用标签"></a>4.HTML常用标签</h2><h3 id="4-1-标题标签"><a href="#4-1-标题标签" class="headerlink" title="4.1 标题标签"></a>4.1 标题标签</h3><pre><code>    &lt;h1&gt;&lt;/h1&gt;到&lt;h6&gt;&lt;/h6&gt;</code></pre><h3 id="4-2-段落标签和换行标签"><a href="#4-2-段落标签和换行标签" class="headerlink" title="4.2 段落标签和换行标签"></a>4.2 段落标签和换行标签</h3><pre><code>    &lt;p&gt;我是段落标签&lt;/p&gt;       我是换行标签&lt;br /&gt;</code></pre><h3 id="4-3-文本格式化标签"><a href="#4-3-文本格式化标签" class="headerlink" title="4.3 文本格式化标签"></a>4.3 文本格式化标签</h3><table><thead><tr><th>语义</th><th align="left">标签</th><th align="left">说明</th></tr></thead><tbody><tr><td>加粗</td><td align="left"><code>&lt;strong&gt;&lt;/strong&gt;</code>或<code>&lt;b&gt;&lt;/b&gt;</code></td><td align="left">推荐使用<code>&lt;strong&gt;</code>标签，语义更强烈</td></tr><tr><td>倾斜</td><td align="left"><code>&lt;em&gt;&lt;/em&gt;</code>或者<code>&lt;i&gt;&lt;/i&gt;</code></td><td align="left">推荐使用<code>&lt;em&gt;</code>标签，语义更强烈</td></tr><tr><td>下划线</td><td align="left"><code>&lt;ins&gt;&lt;/ins&gt;</code>或者<code>&lt;u&gt;&lt;/u&gt;</code></td><td align="left">推荐使用<code>&lt;ins&gt;</code>标签，语义更强烈</td></tr><tr><td>删除线</td><td align="left"><code>&lt;del&gt;&lt;/del&gt;</code>或者<code>&lt;s&gt;&lt;/s&gt;</code></td><td align="left">推荐使用<code>&lt;del&gt;</code>标签，语义更强烈</td></tr><tr><td>### 4.4 div和span标签(都无语义，仅用作布局)</td><td align="left"></td><td align="left"></td></tr><tr><td>```</td><td align="left"></td><td align="left"></td></tr><tr><td><div>div是大盒子，一行只能放一个</div></td><td align="left"></td><td align="left"></td></tr><tr><td><span>span是小盒子，一行可以有多个</span></td><td align="left"></td><td align="left"></td></tr><tr><td>```</td><td align="left"></td><td align="left"></td></tr><tr><td>### <font color="#0099ff"> 4.5 图像标签和路径</font></td><td align="left"></td><td align="left"></td></tr><tr><td>```</td><td align="left"></td><td align="left"></td></tr><tr><td><img src=""></td><td align="left"></td><td align="left"></td></tr><tr><td>```</td><td align="left"></td><td align="left"></td></tr><tr><td>属性</td><td align="left">属性值</td><td align="left">说明</td></tr><tr><td>—-</td><td align="left">:—-</td><td align="left">:—-</td></tr><tr><td>src</td><td align="left">图片路径</td><td align="left">必须属性</td></tr><tr><td>alt</td><td align="left">文本</td><td align="left">替换文本。图像不能显示的文字</td></tr><tr><td>title</td><td align="left">文本</td><td align="left">提示文本。鼠标放到图像上，显示的文字</td></tr><tr><td>width</td><td align="left">像素</td><td align="left">设置图像的宽度</td></tr><tr><td>height</td><td align="left">像素</td><td align="left">设置图像的高度</td></tr><tr><td>border</td><td align="left">像素</td><td align="left">设置图像的边框粗细</td></tr><tr><td>注：width和height只需设置一个，另一个会等比例放大缩小</td><td align="left"></td><td align="left"></td></tr><tr><td>+ 相对路径</td><td align="left"></td><td align="left"></td></tr></tbody></table><blockquote><p>相对路径：以引用文件所在位置为参考基础，而建立出的目录路径（图片相对于HTML页面的位置）</p></blockquote><pre><code>|相对路径分类|符号|说明||----|:----|:----||同一级路径||图像文件位于HTML文件同一级 如```&lt;img src="haha.jpg" /&gt;```||下一级路径|/|图像文件位于HTML文件下一级 如```&lt;img src="images/haha.jpg" /&gt;```||上一级路径|../|图像文件位于HTML文件上一级 如```&lt;img src="../../haha.jpg" /&gt;```|</code></pre><ul><li>绝对路径<blockquote><p>绝对路径：指目录下的绝对位置，直接到达目标位置，通常是从盘符开始的路径</p></blockquote><pre><code>&lt;img src="C:\Users\L\Pictures\haha.jpg" /&gt;&lt;img src="https://www.r2coding.com/r2_static/img/haha.png" /&gt;</code></pre><h3 id="4-6-超链接标签"><a href="#4-6-超链接标签" class="headerlink" title=" 4.6 超链接标签"></a><font color="#0099ff"> 4.6 超链接标签</font></h3><ol><li>外部链接<pre><code>  &lt;a href="https://zhangxuelee.github.io/" target=_self&gt;个人网站&lt;/a&gt;</code></pre><table><thead><tr><th align="left">属性</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">href</td><td align="left">用于指定链接目标的url地址，（必须属性）</td></tr><tr><td align="left">target</td><td align="left">用于指定链接页面的打开方式，其中_self为默认值，_blank为在新窗口中打开方式</td></tr></tbody></table></li><li>内部链接<blockquote><p>内部链接：网站内部页面之间的相互链接，直接链接内部页面名称即可</p></blockquote><pre><code> &lt;a href="index.html" &gt;主页&lt;/a&gt;</code></pre></li><li>空链接<blockquote><p>空链接：如果当时没有确定链接目标时使用</p></blockquote><pre><code>  &lt;a href="#" &gt;主页&lt;/a&gt;</code></pre></li><li>下载链接<blockquote><p>下载链接：如果href里面地址是一个文件或者压缩包，会下载这个文件</p></blockquote><pre><code>   &lt;a href="favicon.zip" &gt;下载文件&lt;/a&gt;</code></pre></li><li>网页元素链接<blockquote><p>网页元素链接：在网页中的各种网页元素，如文本、图像、表格、音频、视频等都可以添加超链接</p></blockquote><pre><code>  &lt;a href="https://zhangxuelee.github.io/"&gt;&lt;img src="favicon.png" /&gt;&lt;/a&gt;</code></pre></li><li>锚点链接<blockquote><p>锚点链接：点击链接可快速定位到页面中指定位置。<br>  设置href属性值为”#名字”，在目标位置标签中添加id属性，赋值为刚才的名字</p></blockquote><pre><code>  &lt;a href="#live" /&gt;个人生活&lt;/a&gt;  &lt;h4 id="live"&gt;个人生活&lt;/h4&gt;</code></pre><h3 id="4-7-表格标签"><a href="#4-7-表格标签" class="headerlink" title="4.7 表格标签"></a>4.7 表格标签</h3><blockquote><p>表格用于展示数据</p></blockquote><h4 id="1-表格的相关标签"><a href="#1-表格的相关标签" class="headerlink" title="1.表格的相关标签:"></a>1.表格的相关标签:</h4><pre><code>&lt;tr&gt;标签用于定义行&lt;td&gt;标签用于定义单元格&lt;th&gt;标签用于表示HTML表格的表头部分&lt;thead&gt;标签是表格的头部区域&lt;tbody&gt;标签是表格的主体区域注：表头单元格里面的文本内容会加粗居中显示</code></pre><h4 id="2-表格的书写格式"><a href="#2-表格的书写格式" class="headerlink" title="2.表格的书写格式:"></a>2.表格的书写格式:</h4><pre><code>&lt;table align="center" border="1" &gt;&lt;thead&gt;&lt;tr&gt;  &lt;th&gt;姓名&lt;/th&gt;  &lt;th&gt;性别&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;  &lt;td&gt;张三&lt;/td&gt;  &lt;td&gt;男&lt;/td&gt;  ...&lt;/tr&gt;...&lt;/tbody&gt;&lt;/table&gt;</code></pre><h4 id="3-表格的相关属性"><a href="#3-表格的相关属性" class="headerlink" title="3.表格的相关属性:"></a>3.表格的相关属性:</h4><table><thead><tr><th align="left">属性名</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td align="left">align</td><td>left、center、right</td><td>规定表格相对周围元素的对齐方式</td></tr><tr><td align="left">border</td><td>1或””</td><td>规定表格单元是否拥有边框，默认为””,表示没有边框</td></tr><tr><td align="left">cellpadding</td><td>像素值</td><td>规定单元格边沿与其内容之间的空白，默认1像素</td></tr><tr><td align="left">cellspacing</td><td>像素值</td><td>规定单元格之间的空白，默认2像素</td></tr><tr><td align="left">width</td><td>像素值或百分比</td><td>规定表格的宽度</td></tr><tr><td align="left">#### 4.合并单元格</td><td></td><td></td></tr><tr><td align="left">```</td><td></td><td></td></tr><tr><td align="left">跨行合并:rowspan=”合并单元格的个数”,写在最上侧单元格</td><td></td><td></td></tr><tr><td align="left">跨列合并:colspan=”合并单元格的个数”,写在最左侧单元格</td><td></td><td></td></tr><tr><td align="left">```</td><td></td><td></td></tr><tr><td align="left"><font color="#0099">注:最后需要删除多余的单元格</font></td><td></td><td></td></tr></tbody></table></li></ol></li></ul><h3 id="4-8-列表标签"><a href="#4-8-列表标签" class="headerlink" title="4.8 列表标签"></a>4.8 列表标签</h3><blockquote><p>列表标签用于布局</p></blockquote><h4 id="1-无序列表"><a href="#1-无序列表" class="headerlink" title="1.无序列表"></a><font color="#0099ff">1.无序列表</font></h4><pre><code>&lt;ul&gt;&lt;/ul&gt;中只能嵌套&lt;li&gt;&lt;/li&gt;&lt;li&gt;&lt;/li&gt;中可以放任何标签</code></pre><pre><code>&lt;ul&gt;  &lt;li&gt;列表项1&lt;/li&gt;  &lt;li&gt;列表项2&lt;/li&gt;  &lt;li&gt;列表项3&lt;/li&gt;  ...&lt;/ul&gt;</code></pre><h4 id="2-有序列表"><a href="#2-有序列表" class="headerlink" title="2.有序列表"></a>2.有序列表</h4><pre><code>&lt;ol&gt;&lt;/ol&gt;中只能嵌套&lt;li&gt;&lt;/li&gt;&lt;li&gt;&lt;/li&gt;中可以放任何标签</code></pre><pre><code>&lt;ol&gt;  &lt;li&gt;列表项1&lt;/li&gt;  &lt;li&gt;列表项2&lt;/li&gt;  &lt;li&gt;列表项3&lt;/li&gt;  ...&lt;/ol&gt;</code></pre><h4 id="3-自定义列表"><a href="#3-自定义列表" class="headerlink" title="3.自定义列表"></a><font color="#0099ff">3.自定义列表</font></h4><blockquote><p>自定义列表常用于对术语或名词进行解释和描述,列表项前无序号</p></blockquote><pre><code>&lt;dl&gt;&lt;/dl&gt;中只能嵌套&lt;dt&gt;&lt;dd&gt;&lt;dt&gt;&lt;dd&gt;中可以放任何标签</code></pre><pre><code>&lt;dl&gt;  &lt;dt&gt;名词1&lt;/dt&gt;  &lt;dd&gt;名词1解释1&lt;/dd&gt;  &lt;dd&gt;名词1解释2&lt;/dd&gt;  ...&lt;/dl&gt;</code></pre><h3 id="4-9-表单标签"><a href="#4-9-表单标签" class="headerlink" title="4.9 表单标签"></a>4.9 表单标签</h3><blockquote><p>表单用于收集用户信息</p></blockquote><h4 id="1-表单域"><a href="#1-表单域" class="headerlink" title="1.表单域"></a>1.表单域</h4><blockquote><pre><code>&lt;form&gt;标签用于定义表单域,&lt;form&gt;会将它范围内的表单元素信息提交给服务器</code></pre></blockquote><pre><code>&lt;form action="url地址" method="提交方式" name="表单域名称"&gt;  各种表单元素控件&lt;/form&gt;</code></pre><h4 id="2-表单控件"><a href="#2-表单控件" class="headerlink" title="2.表单控件"></a>2.表单控件</h4><ul><li><p>input输入表单元素</p><blockquote><p><code>&lt;input&gt;</code>标签用于收集用户信息</p></blockquote><blockquote><p><code>&lt;label&gt;</code>标签用于扩大按钮选择范围，其中for和<code>&lt;input&gt;</code>标签中的id值必须一致</p></blockquote><pre><code>&lt;input type="radio" id="nan"name="sex" value="男" checked="checked"&gt;&lt;label for="nam"&gt;男&lt;/label&gt;</code></pre><pre><code>&lt;input type="text" name="username" value="请输入用户名" maxlength="6"&gt;</code></pre><p>type属性:</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>button</td><td>按钮</td></tr><tr><td>checkbox</td><td>复选框，name值必须一致，设置checked属性用于默认选中此按钮</td></tr><tr><td>password</td><td>密码框</td></tr><tr><td>text</td><td>文本框，设置maxlength属性用于限制字符长度</td></tr><tr><td>radio</td><td>单选按钮，<font color="#0099ff">name值必须一致</font>，设置checked属性用于默认选中此按钮</td></tr><tr><td><font color="#0099ff">submit</font></td><td>提交按钮，value=”提交”</td></tr><tr><td>reset</td><td>重置按钮，value=”重新填写”</td></tr><tr><td>file</td><td>文件域，用于上传文件</td></tr></tbody></table></li><li><p>select下拉表单元素</p><blockquote><p><code>&lt;select&gt;</code>标签用于定义下拉列表，selected=”selected”属性为默认选中</p></blockquote><pre><code>&lt;form&gt;  &lt;select&gt;    &lt;option&gt;选项1&lt;/option&gt;    &lt;option&gt;选项2&lt;/option&gt;    &lt;option selected="selected"&gt;选项3&lt;/option&gt;    ···  &lt;/select&gt;&lt;/form&gt;</code></pre><p>注：<code>&lt;select&gt;标签内最少有一对&lt;option&gt;标签</code></p></li><li><p>textarea文本域元素</p><blockquote><p><code>&lt;textarea&gt;标签用于多行文本输入的控件，常见于留言板、评论</code></p></blockquote><pre><code>&lt;form&gt;留言板：  &lt;textarea rows="3" cols="20"&gt;    最多不超过500字  &lt;/textarea&gt;&lt;/form&gt;</code></pre><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>rows</td><td>显示的行数，一般用css实现</td></tr><tr><td>cols</td><td>每行中的字符数，一般用css实现</td></tr></tbody></table></li></ul><h2 id="5-HTML中的注释和特殊字符"><a href="#5-HTML中的注释和特殊字符" class="headerlink" title="5.HTML中的注释和特殊字符"></a>5.HTML中的注释和特殊字符</h2><ul><li><blockquote><p>HTML中的注释快捷键：ctrl + /</p></blockquote><pre><code>      &lt;!-- 注释语句 --&gt;</code></pre></li><li>特殊字符<table><thead><tr><th>特殊字符</th><th>描述</th><th>字符的代码</th></tr></thead><tbody><tr><td></td><td>空格符</td><td><code>&amp;nbsp;</code></td></tr><tr><td>&lt;</td><td>小于号</td><td><code>&amp;lt;</code></td></tr><tr><td>&gt;</td><td>大于号</td><td><code>&amp;gt;</code></td></tr></tbody></table></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>前端知识大纲</title>
      <link href="/blog/2022/07/16/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E5%A4%A7%E7%BA%B2/"/>
      <url>/blog/2022/07/16/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E5%A4%A7%E7%BA%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="前端复习大纲"><a href="#前端复习大纲" class="headerlink" title="前端复习大纲"></a>前端复习大纲</h1><h2 id="1-Web标准"><a href="#1-Web标准" class="headerlink" title="1. Web标准"></a>1. Web标准</h2><pre><code>web标准主要由结构、表现和行为组成</code></pre><table><thead><tr><th>标准</th><th align="left">说明</th><th align="center">使用</th></tr></thead><tbody><tr><td>结构</td><td align="left">结构用于对<strong>网页元素</strong>进行整理和分类</td><td align="center">HTML</td></tr><tr><td>表现</td><td align="left">表现用于设置网页元素的版本、颜色、大小等<strong>外观样式</strong></td><td align="center">CSS</td></tr><tr><td>行为</td><td align="left">行为指网页模型的定义及<strong>交互</strong>的编写</td><td align="center">JS</td></tr><tr><td>## 2. HTML（结构）</td><td align="left"></td><td align="center"></td></tr></tbody></table><blockquote><p>HTML主要做结构，显示元素内容</p></blockquote><ol><li>标签的的书写注意规范</li><li>HTML标签</li><li>超链接标签</li><li>图片标签、alt和title的区别</li><li>相对路径的三种形式</li><li>能够书写表格</li><li>能够写出无序列表</li><li>能够写出3~4个常用input表单类型</li><li>能够写出下拉列表表单</li><li>能够使用表单元素实现注册页面</li><li>能够独立查阅W3C文档<h2 id="3-CSS（样式）"><a href="#3-CSS（样式）" class="headerlink" title="3. CSS（样式）"></a>3. CSS（样式）</h2><blockquote><p>CSS美化HTML，布局网页</p></blockquote></li><li>CSS概念</li><li>CSS基础选择器</li><li>设置字体样式</li><li>设置文本样式</li><li>CSS的三种引入方式</li><li>使用Chrome调试工具调试样式</li><li>能使用emmet语法</li><li>能够使用CSS复合选择器</li><li>能够写出伪类选择器的使用规范</li><li>能够说出元素有几种显示模式</li><li>能够写出元素显示模式的相互转换代码</li><li>能够写出背景图片的设置方法</li><li>能够计算CSS的权重</li><li>能够准确阐述盒子模型的4个组成部分</li><li>能够利用边框复合写法给元素添加边框</li><li>能够计算盒子的实际大小</li><li>能够利用盒子模型布局模块案例</li><li>能够给盒子设置圆角边框</li><li>能够给盒子添加阴影</li><li>能够给文字添加阴影</li><li>能够说出为什么需要浮动</li><li>能够说出浮动的排列特性</li><li>能够说出3种最常见的布局方式</li><li>能够说出为什么需要清除浮动</li><li>能够写出至少 2种清除浮动的方法</li><li>能够利用Photoshop实现基本的切图</li><li>能够利用 Photoshop插件实现切图<h2 id="4-JS"><a href="#4-JS" class="headerlink" title="4. JS"></a>4. JS</h2></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法</title>
      <link href="/blog/2020/04/19/Markdown%E8%AF%AD%E6%B3%95/"/>
      <url>/blog/2020/04/19/Markdown%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown常用语法"><a href="#Markdown常用语法" class="headerlink" title="Markdown常用语法"></a>Markdown常用语法</h1><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><ul><li>在文字前面加上 -</li><li>文本</li><li>文本</li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><ul><li>在文字前面加上 1. 2. 3</li></ul><ol><li>文本</li><li>文本</li><li>文本</li></ol><h2 id="插入链接"><a href="#插入链接" class="headerlink" title="插入链接"></a>插入链接</h2><ul><li>[显示文本] (链接地址)</li><li><a href="https://zhangxuelee.github.io/" target="_blank" rel="noopener">lee</a></li></ul><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><ul><li>! [] (图片链接地址)<br><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/%E7%8E%8B%E4%B8%80%E5%8D%9A.jpg/510px-%E7%8E%8B%E4%B8%80%E5%8D%9A.jpg" alt=""></li></ul><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul><li>在引用的文字前面加上 &gt; <blockquote><p>王一博（朝鲜语：왕일박 Wang Il Bak，英语：Wang Yi Bo，1997年8月5日－），艺名一博（朝鲜语：이보 I Bo，英语：Yi Bo），出生于河南洛阳，中国大陆男歌手、舞者、演员，湖南卫视《天天向上》节目主持人，同时也是摩托车车手与滑板手。2014年10月16日，以五人男子团体UNIQ出道，为团内主领舞[1]、领Rapper，亦是团体中的忙内。2016年4月29日，正式成为湖南卫视综艺节目《天天向上》主持团天天兄弟的成员之一。[2] 同时，王一博也是一名职业摩托车车手，为中国万里达雅马哈车队（MLT YAMAHA）的签约车手，号码85，更于2019年的ARRC亚锦赛中国珠海站中获得D组新秀组冠军、混合组亚军的成绩。[3] 2019年出演电视剧《陪你到世界之巅》、《陈情令》，在剧中饰演“季向空”与“蓝忘机”一角。[4] 2019年8月，首次入选2019年福布斯中国名人榜并位列第71名。</p></blockquote></li></ul><h2 id="粗体和斜体"><a href="#粗体和斜体" class="headerlink" title="粗体和斜体"></a>粗体和斜体</h2><ul><li>用两个 * 包含一段文本就是粗体的语法</li><li>用一个 * 包含一段文本就是斜体的语法</li><li>*和文字之间不需要空格</li></ul><p><strong>YiBo</strong><br><em>王一博</em></p><h2 id="代码引用"><a href="#代码引用" class="headerlink" title="代码引用"></a>代码引用</h2><ul><li>如果引用的语句只有一段，不分行，可以用 ` 将语句包起来。</li><li><code>代码</code></li><li>如果引用的语句为多行，可以将```置于这段代码的首行和末行。</li><li><code>多行代码</code></li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>效果：</p><table><thead><tr><th>name</th><th align="center">age</th><th align="right">id</th></tr></thead><tbody><tr><td>lee</td><td align="center">18</td><td align="right">01</td></tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>上传命令</title>
      <link href="/blog/2020/02/09/%E4%B8%8A%E4%BC%A0%E5%91%BD%E4%BB%A4/"/>
      <url>/blog/2020/02/09/%E4%B8%8A%E4%BC%A0%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>title：上传文章</p><h1 id="上传文章的步骤"><a href="#上传文章的步骤" class="headerlink" title="上传文章的步骤"></a>上传文章的步骤</h1><ol><li>将.md文件放入D:\blog\source_posts文件夹中</li><li>在任意位置鼠标点击右键，选择Git Bash Here</li><li>在弹出的界面上输入如下内容：<ul><li>启动hexo:输入hexo g</li><li>启动服务器：输入hexo s ，按ctrl+c退出本地运行</li><li>发表文章：输入hexo d<br><img src="https://img-blog.csdnimg.cn/20200209203942672.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUxMjI4MQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
